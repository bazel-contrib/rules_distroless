"Bazel dependencies"

module(
    name = "rules_distroless",
    compatibility_level = 1,
)

bazel_dep(name = "rules_cc", version = "0.2.8")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "bazel_features", version = "1.20.0")
bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")
bazel_dep(name = "rules_java", version = "8.8.0")
bazel_dep(name = "rules_shell", version = "0.4.1")

bazel_lib_toolchains = use_extension("@aspect_bazel_lib//lib:extensions.bzl", "toolchains")
use_repo(bazel_lib_toolchains, "zstd_toolchains")
use_repo(bazel_lib_toolchains, "bsd_tar_toolchains")

# Dev dependencies
bazel_dep(name = "gazelle", version = "0.34.0", dev_dependency = True, repo_name = "bazel_gazelle")
bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.5.0", dev_dependency = True)
bazel_dep(name = "buildifier_prebuilt", version = "8.0.1", dev_dependency = True)
bazel_dep(name = "rules_oci", version = "2.0.0", dev_dependency = True)
bazel_dep(name = "container_structure_test", version = "1.16.0", dev_dependency = True)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "example-bullseye-ca-certificates",
    build_file_content = 'exports_files(["data.tar.xz", "control.tar.xz"])',
    sha256 = "b2d488ad4d8d8adb3ba319fc9cb2cf9909fc42cb82ad239a26c570a2e749c389",
    urls = ["https://snapshot.debian.org/archive/debian/20231106T210201Z/pool/main/c/ca-certificates/ca-certificates_20210119_all.deb"],
)

http_archive(
    name = "example-bullseye-libc-bin",
    build_file_content = 'exports_files(["data.tar.xz"])',
    sha256 = "8b048ab5c7e9f5b7444655541230e689631fd9855c384e8c4a802586d9bbc65a",
    urls = ["https://snapshot.debian.org/archive/debian-security/20231106T230332Z/pool/updates/main/g/glibc/libc-bin_2.31-13+deb11u7_amd64.deb"],
)

http_archive(
    name = "example-bookworm-libc-bin",
    build_file_content = 'exports_files(["data.tar.xz"])',
    sha256 = "38c44247c5b3e864d6db2877edd9c9a0555fc4e23ae271b73d7f527802616df5",
    urls = ["https://snapshot.debian.org/archive/debian-security/20231106T230332Z/pool/updates/main/g/glibc/libc-bin_2.36-9+deb12u3_armhf.deb"],
)

apt = use_extension(
    "@rules_distroless//apt:extensions.bzl",
    "apt",
    dev_dependency = True,
)
apt.sources_list(
    architectures = ["amd64"],
    components = ["main"],
    suites = [
        "noble",
        "noble-security",
        "noble-updates",
    ],
    types = ["deb"],
    uris = [
        "https://snapshot.ubuntu.com/ubuntu/20240301T030400Z",
        "mirror+https://snapshot.ubuntu.com/ubuntu/20240301T030400Z",
    ],
    # TODO: signed_by
)
apt.sources_list(
    architectures = ["amd64"],
    components = ["main"],
    suites = ["cloud-sdk"],
    types = ["deb"],
    uris = ["https://packages.cloud.google.com/apt"],
)
apt.sources_list(
    architectures = ["amd64"],
    components = ["main"],
    suites = ["cloud-sdk"],
    types = ["deb"],
    uris = ["https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/"],
)
apt.sources_list(
    architectures = [
        "amd64",
        "arm64",
        "i386",
    ],
    components = ["main"],
    suites = [
        "bookworm",
        "bookworm-updates",
    ],
    types = ["deb"],
    uris = ["https://snapshot.debian.org/archive/debian/20240210T223313Z"],
)
apt.sources_list(
    architectures = [
        "amd64",
        "arm64",
        "i386",
    ],
    components = ["main"],
    suites = ["bookworm-security"],
    types = ["deb"],
    uris = ["https://snapshot.debian.org/archive/debian-security/20240210T223313Z"],
)
apt.install(
    # dependency_set isolates these installs into their own scope.
    # installing onto default dependency_set only allowed in the
    # root module
    dependency_set = "bookworm",
    packages = [
        "base-files",
        "coreutils:arm64",
        "google-cloud-cli:amd64",
        "libncurses6",
        "libstdc++6:i386",
        "ncurses-base",
        "tzdata",
    ],
    suites = [
        "bookworm",
        "bookworm-updates",
        "bookworm-security",
        "cloud-sdk",
    ],
)
use_repo(apt, "bookworm")

# TODO: support this style of source_list
#
# apt.sources_list(
#     sources = [
#         "deb [arch=amd64,arm64] https://snapshot.ubuntu.com/ubuntu/20240301T030400Z noble main",
#         "deb [arch=amd64,arm64] https://snapshot.ubuntu.com/ubuntu/20240301T030400Z noble-security main",
#         "deb [arch=amd64,arm64] https://snapshot.ubuntu.com/ubuntu/20240301T030400Z noble-updates main",
#     ],
# )
#
